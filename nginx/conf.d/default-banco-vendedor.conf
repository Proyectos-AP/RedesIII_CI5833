server {
  listen 80;
	listen [::]:80 ipv6only=on;

  root /var/www;

  # Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

  location / {
    try_files $uri $uri/ =404;
  }
}

server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www;

	# Add index.php to the list if you are using PHP
	# index index.html index.htm index.nginx-debian.html;
  server_name a2.ac.labf.usb.ve; # managed by Certbot

  location / {
    include proxy_params;
    proxy_pass http://127.0.0.1:8000;
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/a2.ac.labf.usb.ve/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/a2.ac.labf.usb.ve/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = a2.ac.labf.usb.ve) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name a2.ac.labf.usb.ve;
    return 404; # managed by Certbot


}
